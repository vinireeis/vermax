services:
  db:    
    image: postgres:17
    restart: always    
    container_name: vermax-postgres-db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - vermax_api_network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vermax-api
    command: >
      sh -c "
      poetry run pytest --asyncio-mode=auto --cov=src/services --cov-report=term-missing &&
      alembic upgrade head &&
      poetry run python3 main.py"
    ports:
      - "8000:8000"
    environment:
      LOG_LEVEL: "10"
      JWT_TTL: "30"
      JWT_ALGORITHM: "HS256"
      JWT_SECRET_KEY: "my_secret_key"
      POSTGRES_STRING_CONNECTION: ${POSTGRES_STRING_CONNECTION}
    restart: always
    depends_on:
      db:
        condition: service_healthy
    networks:
      - vermax_api_network

networks:
  vermax_api_network:

volumes:
  postgres_data:
